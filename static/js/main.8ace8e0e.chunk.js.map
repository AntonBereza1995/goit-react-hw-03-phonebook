{"version":3,"sources":["components/Filter/Filter.module.css","components/ContactItem/ContactItem.module.css","components/AddContactForm/AddContactForm.module.css","components/AddContactForm/AddContactForm.jsx","components/Filter/Filter.jsx","components/ContactItem/ContactItem.jsx","components/ContactBook/ContactBook.jsx","App.js","index.js","components/ContactBook/ContactBook.module.css"],"names":["module","exports","AddContactForm","state","name","number","addInputContact","e","currentTarget","value","setState","submitContact","preventDefault","props","submit","reset","className","cs","title","form","onSubmit","this","inputTitle","type","pattern","required","onChange","addBtn","Component","Filter","onFilter","filterContainer","input","target","ContactItem","onDelete","id","btnDeleteContact","onClick","ContactBook","data","list","map","item","App","contacts","filter","formSubmit","includes","alert","newContact","nanoid","old","concat","filterContacts","i","toLowerCase","reshapeFilter","deleteContact","deleteId","prevState","localStorage","setItem","JSON","stringify","parsContacts","parse","getItem","filtered","length","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8ace8e0e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterContainer\":\"Filter_filterContainer__1Pxs3\",\"input\":\"Filter_input__27uoU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btnDeleteContact\":\"ContactItem_btnDeleteContact__2JGNq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"AddContactForm_title__37PcN\",\"inputTitle\":\"AddContactForm_inputTitle__5XhET\",\"form\":\"AddContactForm_form__1CrT_\",\"addBtn\":\"AddContactForm_addBtn__1JFCg\"};","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport cs from \"./AddContactForm.module.css\";\n\nclass AddContactForm extends Component {\n  state = {\n    name: \"\",\n    number: \"\",\n  };\n\n  addInputContact = (e) => {\n    const { name, value } = e.currentTarget;\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  submitContact = (e) => {\n    e.preventDefault();\n    this.props.submit({\n      name: this.state.name,\n      number: this.state.number,\n    });\n    this.reset();\n  };\n\n  reset = (e) => {\n    this.setState({ name: \"\", number: \"\" });\n  };\n\n  render() {\n    return (\n      <>\n        <h1 className={cs.title}>Phonebook</h1>\n        <form className={cs.form} onSubmit={this.submitContact}>\n          <label className={cs.inputTitle}>\n            Name\n            <br />\n            <input\n              type=\"text\"\n              name=\"name\"\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n              required\n              value={this.state.name}\n              onChange={this.addInputContact}\n            />\n            <br />\n            Number\n            <br />\n            <input\n              type=\"tel\"\n              name=\"number\"\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n              title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n              required\n              value={this.state.number}\n              onChange={this.addInputContact}\n            />\n          </label>\n          <br />\n          <button type=\"submit\" className={cs.addBtn}>\n            Add contact\n          </button>\n        </form>\n      </>\n    );\n  }\n}\n\nAddContactForm.propTypes = {\n  submit: PropTypes.func.isRequired,\n};\n\nexport default AddContactForm;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport cs from \"./Filter.module.css\";\n\nconst Filter = ({ value, onFilter }) => {\n  return (\n    <div className={cs.filterContainer}>\n      Find contacts by name\n      <input\n        type=\"text\"\n        className={cs.input}\n        value={value}\n        onChange={(e) => onFilter(e.target.value)}\n      />\n    </div>\n  );\n};\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onFilter: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n","import PropTypes from \"prop-types\";\nimport cs from \"./ContactItem.module.css\";\n\nconst ContactItem = ({ name, number, onDelete, id }) => {\n  return (\n    <>\n      {name}: {number}\n      <button\n        className={cs.btnDeleteContact}\n        type=\"button\"\n        name=\"delete\"\n        onClick={() => onDelete(id)}\n      >\n        DELETE\n      </button>\n    </>\n  );\n};\n\nexport default ContactItem;\n\nContactItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  onDelete: PropTypes.func.isRequired,\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport ContactItem from \"../ContactItem/ContactItem\";\nimport cs from \"./ContactBook.module.css\";\n\nconst ContactBook = ({ data, onDelete }) => {\n  return (\n    <>\n      <h2 className={cs.title}>Contacts</h2>\n      <ul className={cs.list}>\n        {data.map(({ name, number, id }) => (\n          <>\n            <li className={cs.item} key={id}>\n              <ContactItem\n                name={name}\n                number={number}\n                onDelete={onDelete}\n                id={id}\n              />\n            </li>\n          </>\n        ))}\n      </ul>\n    </>\n  );\n};\n\nContactBook.propTypes = {\n  data: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n      id: PropTypes.string.isRequired,\n    })\n  ),\n  onDelete: PropTypes.func.isRequired,\n};\n\nexport default ContactBook;\n","import React, { Component } from 'react';\nimport { nanoid } from 'nanoid';\n\nimport AddContactForm from './components/AddContactForm/AddContactForm'\nimport Filter from './components/Filter/Filter'\nimport ContactBook from './components/ContactBook/ContactBook'\n\nclass App extends Component {\n  state = {\n    contacts: [],\n    filter: \"\",\n  }\n\n  componentDidUpdate(prevState) {\n    if (this.state.contacts !== prevState.contacts)\n      localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\n      // console.log(this.state.contacts);\n  }\n  componentDidMount() { \n    const parsContacts = JSON.parse(localStorage.getItem('contacts'));\n    if (parsContacts) {\n      this.setState({contacts: parsContacts})\n    };\n    // console.log(parsContacts);\n  }\n\n  formSubmit = (data) => {\n\n    const searchContact = this.state.contacts.map(e => e.name).includes(data.name);\n\n\n    if (searchContact) {\n      alert(`${data.name} is already in contacts`);\n    } else {\n      const newContact = {\n        ...data, id: nanoid(),\n      };\n      this.setState(old => ({\n        contacts: old.contacts.concat(newContact),\n      }))\n    }\n\n  };\n\n  filterContacts = () => {\n    const { contacts, filter } = this.state;\n\n    return contacts.filter(i =>\n      i.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  };\n\n  reshapeFilter = (e) => {\n    this.setState({ filter: e });\n  };\n\n  deleteContact = (deleteId) => {\n    this.setState(old => ({\n      contacts: old.contacts.filter(e => e.id !== deleteId),\n    }));\n  }\n  \n  render() {\n    const filtered = this.filterContacts();\n\n    return (\n      <>\n      <AddContactForm submit={this.formSubmit} />\n      <Filter value={this.state.filter} onFilter={this.reshapeFilter}/>\n      {filtered.length >= 0 ? \n          <ContactBook data={filtered} onDelete={this.deleteContact}/>\n         : <ContactBook data={this.state.contacts} onDelete={this.deleteContact}/>\n      }\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"ContactBook_title__2PY38\",\"list\":\"ContactBook_list__1p2IH\",\"item\":\"ContactBook_item__3U6xy\"};"],"sourceRoot":""}